<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="ni_name" jdbcType="VARCHAR" property="niName" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, state, email, address, phone, url,ni_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <select id="queryByLoginMsg" parameterType="com.model.User" resultMap="BaseResultMap">
    select 
     <include refid="Base_Column_List" />
    from user
   <where>
     <if test="userName != null">
        AND user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="password != null">
       AND password = #{password,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.User">
    insert into user (user_id, user_name, password, 
      state, email, address, 
      phone, url)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
       <if test="niName != null">
        ni_name = #{niName,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
   <select id="queryAddressByLogin" parameterType="java.util.Map" resultType="java.util.Map">
    select id , buy_id ,rece_name ,tel,addres, create_date, remark
    from user_addres where 1=1
     <if test="buyId != null">
        AND buy_id = #{buyId,jdbcType=VARCHAR}
      </if>
  </select>
  
  <delete id="deleteAddressByPrimaryKey" parameterType="java.util.Map">
    delete from user_addres
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertUserAddress" parameterType="java.util.Map">
    insert into user_addres
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buy_id != null">
        buy_id,
      </if>
      <if test="rece_name != null">
        rece_name,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="addres != null">
        addres,
      </if>
      <if test="create_date != null">
        create_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
     
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
    <if test="buy_id != null">
        #{buy_id,jdbcType=INTEGER},
      </if>
      <if test="rece_name != null">
         #{rece_name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="addres != null">
         #{addres,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null">
         #{create_date,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
   <select id="queryUserByCond" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    from user
    <where>
    	<if test="userName!=null">
    		   AND user_name LIKE CONCAT(CONCAT('%',#{userName}),'%')
	  	</if>
    </where>
  </select>
   
</mapper>